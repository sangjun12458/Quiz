#include <iostream>
#include <queue>

using namespace std;

int n, t, shark = 2, eat = 0;
int space[20][20];
queue<pair<int, int>> q;
int r, c;
int dr[] = {-1, 0, 0, 1};
int dc[] = {0, -1, 1, 0};

bool check()
{
    int cnt = 0;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (space[i][j] != 0 && space[i][j] < t)
                cnt++;
        }
    }
    if (cnt != 0)
        return true;
    return false;
}
pair<int, int> find_fish()
{
    int nr, nc;

    for (int i = 0; i < 4; i++)
    {
        nr = r + dr[i];
        nc = c + dc[i];
        if (nr < 0 || nr >= n || nc < 0 || nc >= n)
            continue;
        if (space[nr][nc] > 0 && space[nr][nc] < shark)
            return make_pair(nr, nc);
    }
    return make_pair(r, c);
}
void move()
{
}

int main()
{
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            cin >> space[i][j];
            if (space[i][j] == 9)
            {
                r = i;
                c = j;
            }
        }
    }

    while (1)
    {
        if (check())
            break;

        pair<int, int> now = make_pair(r, c);
        pair<int, int> next = find while (location !=)

            move();
    }

    cout << t;

    return 0;
}
